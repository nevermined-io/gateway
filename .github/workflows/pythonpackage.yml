# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install minikube v1.12.0
      run: |
        wget https://storage.googleapis.com/minikube/releases/v1.12.0/minikube-linux-amd64
        chmod +x minikube-linux-amd64
        sudo mv minikube-linux-amd64 /usr/local/bin/minikube
    - name: Reclaim some disk space
      run : |
          docker system prune --all --volumes -f
    - name: Start Nevermined
      run: |
        docker login -u ${{ secrets.NEVERMINED_DOCKER_USERNAME }} -p ${{ secrets.NEVERMINED_DOCKER_TOKEN}}
        git clone https://github.com/nevermined-io/tools nevermined-tools
        cd nevermined-tools
        rm -rf "${HOME}/.nevermined/nevermined-contracts/artifacts"
        ./start_nevermined.sh --no-marketplace --no-gateway --ldap --latest --compute &

        # wait for the compute api to be online
        # the compute api is the last service to come online
        ./scripts/wait_for_compute_api.sh

        # extract artifacts
        cd ..
        ./scripts/wait_for_migration_and_extract_keeper_artifacts.sh

    - name: Install python package
      run: |
        # the latest version of pip (version 20.3) seems to have a lot of problems
        pip install pip==20.2.4
        pip install -r requirements_dev.txt
    - name: Test with pytest
      run: |
        export PROVIDER_ADDRESS=0x00bd138abd70e2f00903268f3db08f2d25677c9e
        export PROVIDER_PASSWORD=node0
        export PROVIDER_KEYFILE=tests/resources/data/publisher_key_file.json
        export RSA_PRIVKEY_FILE=tests/resources/data/rsa_priv_key.pem
        export RSA_PUBKEY_FILE=tests/resources/data/rsa_pub_key.pem
        export AUTHLIB_INSECURE_TRANSPORT=true

        pip install pytest
        pytest -v
